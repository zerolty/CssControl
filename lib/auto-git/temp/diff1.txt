diff --git 1.scss 1.scss
index c7b997d..a392025 100644
--- 1.scss
+++ 1.scss
@@ -1,13 +1,15 @@
 .content {
     &.style {
         width: 100px;
-        height: 100px;
     }
     .content {
         width: 100px;
     }
+    .dd {
+        width: 100%;
+    }
 }
 
 .cc {
     width: 100px;
 }
\ No newline at end of file
diff --git lib/auto-git/1.json lib/auto-git/1.json
index 2003f1e..9e26dfe 100644
--- lib/auto-git/1.json
+++ lib/auto-git/1.json
@@ -1 +1 @@
-{"1.scss":" .content {\r     &.style {\r         width: 100px;\rcontent: '-        height: 100px;';\r     }\r     .content {\r         width: 100px;\r     }\rcontent: '+    .inner {';\rcontent: '+        width: 100px;';\rcontent: '+    }';\r }\r \r .cc {\r     width: 100px;\r }\r"}
\ No newline at end of file
+{}
\ No newline at end of file
diff --git lib/auto-git/2.json lib/auto-git/2.json
index 69d7219..57f8573 100644
--- lib/auto-git/2.json
+++ lib/auto-git/2.json
@@ -1 +1 @@
-[[],["diff --git 1.scss 1.scss","index c7b997d..6eb8dff 100644","--- 1.scss","+++ 1.scss","@@ -1,13 +1,15 @@"," .content {","     &.style {","         width: 100px;","-        height: 100px;","     }","     .content {","         width: 100px;","     }","+    .inner {","+        width: 100px;","+    }"," }"," "," .cc {","     width: 100px;"," }","\\ No newline at end of file"],["diff --git lib/compliestyles/sass-loader.js lib/compliestyles/sass-loader.js","index d554f8f..9573a67 100644","--- lib/compliestyles/sass-loader.js","+++ lib/compliestyles/sass-loader.js","@@ -1,25 +1,25 @@"," const sass = require('node-sass');"," "," function sassLoader(path) {","   const result = sass.renderSync({","     // file: path,","-    data: ' .content {     &.style {         width: 100px;         height: 100px;// -        background: #ddd;// +    }// +    .content {// +        width: 100px;     } }  .cc {     width: 100px; }',","+    data: \".content {     \\r&.style {        \\r width: 100px;\\r// -        height: 100px;     \\r}    \\r .content {         \\rwidth: 100px;     }\\r// +    .inner {\\r// +        width: 100px;\\r// +    } \\r}  \\r.cc {     \\rwidth: 100px; \\r}\\r\",","     // outputStyle: 'compressed',","     // outFile: '../../1.css',","     // sourceMap: true, // or an absolute or relative (to outFile) path","     importer: function(url, prev, done) {","       // url is the path in import as is, which LibSass encountered.","       // prev is the previously resolved path.","       // done is an optional callback, either consume it or return value synchronously.","       // this.options contains this options hash","     }","   });","   if(result.css) {","     return result.css.toString(\"utf8\");","   }","   return {};"," }"," "," "," "," module.exports = sassLoader;","\\ No newline at end of file",""]]
\ No newline at end of file
+[[],["diff --git lib/auto-git/1.json lib/auto-git/1.json","index 2003f1e..9e26dfe 100644","--- lib/auto-git/1.json","+++ lib/auto-git/1.json","@@ -1 +1 @@","-{\"1.scss\":\" .content {\\r     &.style {\\r         width: 100px;\\rcontent: '-        height: 100px;';\\r     }\\r     .content {\\r         width: 100px;\\r     }\\rcontent: '+    .inner {';\\rcontent: '+        width: 100px;';\\rcontent: '+    }';\\r }\\r \\r .cc {\\r     width: 100px;\\r }\\r\"}","\\ No newline at end of file","+{}","\\ No newline at end of file"],["diff --git lib/auto-git/2.json lib/auto-git/2.json","index 69d7219..e8b5916 100644","--- lib/auto-git/2.json","+++ lib/auto-git/2.json","@@ -1 +1 @@","-[[],[\"diff --git 1.scss 1.scss\",\"index c7b997d..6eb8dff 100644\",\"--- 1.scss\",\"+++ 1.scss\",\"@@ -1,13 +1,15 @@\",\" .content {\",\"     &.style {\",\"         width: 100px;\",\"-        height: 100px;\",\"     }\",\"     .content {\",\"         width: 100px;\",\"     }\",\"+    .inner {\",\"+        width: 100px;\",\"+    }\",\" }\",\" \",\" .cc {\",\"     width: 100px;\",\" }\",\"\\\\ No newline at end of file\"],[\"diff --git lib/compliestyles/sass-loader.js lib/compliestyles/sass-loader.js\",\"index d554f8f..9573a67 100644\",\"--- lib/compliestyles/sass-loader.js\",\"+++ lib/compliestyles/sass-loader.js\",\"@@ -1,25 +1,25 @@\",\" const sass = require('node-sass');\",\" \",\" function sassLoader(path) {\",\"   const result = sass.renderSync({\",\"     // file: path,\",\"-    data: ' .content {     &.style {         width: 100px;         height: 100px;// -        background: #ddd;// +    }// +    .content {// +        width: 100px;     } }  .cc {     width: 100px; }',\",\"+    data: \\\".content {     \\\\r&.style {        \\\\r width: 100px;\\\\r// -        height: 100px;     \\\\r}    \\\\r .content {         \\\\rwidth: 100px;     }\\\\r// +    .inner {\\\\r// +        width: 100px;\\\\r// +    } \\\\r}  \\\\r.cc {     \\\\rwidth: 100px; \\\\r}\\\\r\\\",\",\"     // outputStyle: 'compressed',\",\"     // outFile: '../../1.css',\",\"     // sourceMap: true, // or an absolute or relative (to outFile) path\",\"     importer: function(url, prev, done) {\",\"       // url is the path in import as is, which LibSass encountered.\",\"       // prev is the previously resolved path.\",\"       // done is an optional callback, either consume it or return value synchronously.\",\"       // this.options contains this options hash\",\"     }\",\"   });\",\"   if(result.css) {\",\"     return result.css.toString(\\\"utf8\\\");\",\"   }\",\"   return {};\",\" }\",\" \",\" \",\" \",\" module.exports = sassLoader;\",\"\\\\ No newline at end of file\",\"\"]]","\\ No newline at end of file","+[[],[\"diff --git lib/auto-git/1.json lib/auto-git/1.json\",\"index 2003f1e..9e26dfe 100644\",\"--- lib/auto-git/1.json\",\"+++ lib/auto-git/1.json\",\"@@ -1 +1 @@\",\"-{\\\"1.scss\\\":\\\" .content {\\\\r     &.style {\\\\r         width: 100px;\\\\rcontent: '-        height: 100px;';\\\\r     }\\\\r     .content {\\\\r         width: 100px;\\\\r     }\\\\rcontent: '+    .inner {';\\\\rcontent: '+        width: 100px;';\\\\rcontent: '+    }';\\\\r }\\\\r \\\\r .cc {\\\\r     width: 100px;\\\\r }\\\\r\\\"}\",\"\\\\ No newline at end of file\",\"+{}\",\"\\\\ No newline at end of file\"],[\"diff --git lib/auto-git/2.json lib/auto-git/2.json\",\"index 69d7219..1c432ad 100644\",\"--- lib/auto-git/2.json\",\"+++ lib/auto-git/2.json\",\"@@ -1 +1 @@\",\"-[[],[\\\"diff --git 1.scss 1.scss\\\",\\\"index c7b997d..6eb8dff 100644\\\",\\\"--- 1.scss\\\",\\\"+++ 1.scss\\\",\\\"@@ -1,13 +1,15 @@\\\",\\\" .content {\\\",\\\"     &.style {\\\",\\\"         width: 100px;\\\",\\\"-        height: 100px;\\\",\\\"     }\\\",\\\"     .content {\\\",\\\"         width: 100px;\\\",\\\"     }\\\",\\\"+    .inner {\\\",\\\"+        width: 100px;\\\",\\\"+    }\\\",\\\" }\\\",\\\" \\\",\\\" .cc {\\\",\\\"     width: 100px;\\\",\\\" }\\\",\\\"\\\\\\\\ No newline at end of file\\\"],[\\\"diff --git lib/compliestyles/sass-loader.js lib/compliestyles/sass-loader.js\\\",\\\"index d554f8f..9573a67 100644\\\",\\\"--- lib/compliestyles/sass-loader.js\\\",\\\"+++ lib/compliestyles/sass-loader.js\\\",\\\"@@ -1,25 +1,25 @@\\\",\\\" const sass = require('node-sass');\\\",\\\" \\\",\\\" function sassLoader(path) {\\\",\\\"   const result = sass.renderSync({\\\",\\\"     // file: path,\\\",\\\"-    data: ' .content {     &.style {         width: 100px;         height: 100px;// -        background: #ddd;// +    }// +    .content {// +        width: 100px;     } }  .cc {     width: 100px; }',\\\",\\\"+    data: \\\\\\\".content {     \\\\\\\\r&.style {        \\\\\\\\r width: 100px;\\\\\\\\r// -        height: 100px;     \\\\\\\\r}    \\\\\\\\r .content {         \\\\\\\\rwidth: 100px;     }\\\\\\\\r// +    .inner {\\\\\\\\r// +        width: 100px;\\\\\\\\r// +    } \\\\\\\\r}  \\\\\\\\r.cc {     \\\\\\\\rwidth: 100px; \\\\\\\\r}\\\\\\\\r\\\\\\\",\\\",\\\"     // outputStyle: 'compressed',\\\",\\\"     // outFile: '../../1.css',\\\",\\\"     // sourceMap: true, // or an absolute or relative (to outFile) path\\\",\\\"     importer: function(url, prev, done) {\\\",\\\"       // url is the path in import as is, which LibSass encountered.\\\",\\\"       // prev is the previously resolved path.\\\",\\\"       // done is an optional callback, either consume it or return value synchronously.\\\",\\\"       // this.options contains this options hash\\\",\\\"     }\\\",\\\"   });\\\",\\\"   if(result.css) {\\\",\\\"     return result.css.toString(\\\\\\\"utf8\\\\\\\");\\\",\\\"   }\\\",\\\"   return {};\\\",\\\" }\\\",\\\" \\\",\\\" \\\",\\\" \\\",\\\" module.exports = sassLoader;\\\",\\\"\\\\\\\\ No newline at end of file\\\",\\\"\\\"]]\",\"\\\\ No newline at end of file\",\"+[[],[\\\"diff --git lib/auto-git/1.json lib/auto-git/1.json\\\",\\\"index 2003f1e..9e26dfe 100644\\\",\\\"--- lib/auto-git/1.json\\\",\\\"+++ lib/auto-git/1.json\\\",\\\"@@ -1 +1 @@\\\",\\\"-{\\\\\\\"1.scss\\\\\\\":\\\\\\\" .content {\\\\\\\\r     &.style {\\\\\\\\r         width: 100px;\\\\\\\\rcontent: '-        height: 100px;';\\\\\\\\r     }\\\\\\\\r     .content {\\\\\\\\r         width: 100px;\\\\\\\\r     }\\\\\\\\rcontent: '+    .inner {';\\\\\\\\rcontent: '+        width: 100px;';\\\\\\\\rcontent: '+    }';\\\\\\\\r }\\\\\\\\r \\\\\\\\r .cc {\\\\\\\\r     width: 100px;\\\\\\\\r }\\\\\\\\r\\\\\\\"}\\\",\\\"\\\\\\\\ No newline at end of file\\\",\\\"+{}\\\",\\\"\\\\\\\\ No newline at end of file\\\"],[\\\"diff --git lib/auto-git/2.json lib/auto-git/2.json\\\",\\\"index 69d7219..0aaa5d4 100644\\\",\\\"--- lib/auto-git/2.json\\\",\\\"+++ lib/auto-git/2.json\\\",\\\"@@ -1 +1 @@\\\",\\\"-[[],[\\\\\\\"diff --git 1.scss 1.scss\\\\\\\",\\\\\\\"index c7b997d..6eb8dff 100644\\\\\\\",\\\\\\\"--- 1.scss\\\\\\\",\\\\\\\"+++ 1.scss\\\\\\\",\\\\\\\"@@ -1,13 +1,15 @@\\\\\\\",\\\\\\\" .content {\\\\\\\",\\\\\\\"     &.style {\\\\\\\",\\\\\\\"         width: 100px;\\\\\\\",\\\\\\\"-        height: 100px;\\\\\\\",\\\\\\\"     }\\\\\\\",\\\\\\\"     .content {\\\\\\\",\\\\\\\"         width: 100px;\\\\\\\",\\\\\\\"     }\\\\\\\",\\\\\\\"+    .inner {\\\\\\\",\\\\\\\"+        width: 100px;\\\\\\\",\\\\\\\"+    }\\\\\\\",\\\\\\\" }\\\\\\\",\\\\\\\" \\\\\\\",\\\\\\\" .cc {\\\\\\\",\\\\\\\"     width: 100px;\\\\\\\",\\\\\\\" }\\\\\\\",\\\\\\\"\\\\\\\\\\\\\\\\ No newline at end of file\\\\\\\"],[\\\\\\\"diff --git lib/compliestyles/sass-loader.js lib/compliestyles/sass-loader.js\\\\\\\",\\\\\\\"index d554f8f..9573a67 100644\\\\\\\",\\\\\\\"--- lib/compliestyles/sass-loader.js\\\\\\\",\\\\\\\"+++ lib/compliestyles/sass-loader.js\\\\\\\",\\\\\\\"@@ -1,25 +1,25 @@\\\\\\\",\\\\\\\" const sass = require('node-sass');\\\\\\\",\\\\\\\" \\\\\\\",\\\\\\\" function sassLoader(path) {\\\\\\\",\\\\\\\"   const result = sass.renderSync({\\\\\\\",\\\\\\\"     // file: path,\\\\\\\",\\\\\\\"-    data: ' .content {     &.style {         width: 100px;         height: 100px;// -        background: #ddd;// +    }// +    .content {// +        width: 100px;     } }  .cc {     width: 100px; }',\\\\\\\",\\\\\\\"+    data: \\\\\\\\\\\\\\\".content {     \\\\\\\\\\\\\\\\r&.style {        \\\\\\\\\\\\\\\\r width: 100px;\\\\\\\\\\\\\\\\r// -        height: 100px;     \\\\\\\\\\\\\\\\r}    \\\\\\\\\\\\\\\\r .content {         \\\\\\\\\\\\\\\\rwidth: 100px;     }\\\\\\\\\\\\\\\\r// +    .inner {\\\\\\\\\\\\\\\\r// +        width: 100px;\\\\\\\\\\\\\\\\r// +    } \\\\\\\\\\\\\\\\r}  \\\\\\\\\\\\\\\\r.cc {     \\\\\\\\\\\\\\\\rwidth: 100px; \\\\\\\\\\\\\\\\r}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\",\\\\\\\",\\\\\\\"     // outputStyle: 'compressed',\\\\\\\",\\\\\\\"     // outFile: '../../1.css',\\\\\\\",\\\\\\\"     // sourceMap: true, // or an absolute or relative (to outFile) path\\\\\\\",\\\\\\\"     importer: function(url, prev, done) {\\\\\\\",\\\\\\\"       // url is the path in import as is, which LibSass encountered.\\\\\\\",\\\\\\\"       // prev is the previously resolved path.\\\\\\\",\\\\\\\"       // done is an optional callback, either consume it or return value synchronously.\\\\\\\",\\\\\\\"       // this.options contains this options hash\\\\\\\",\\\\\\\"     }\\\\\\\",\\\\\\\"   });\\\\\\\",\\\\\\\"   if(result.css) {\\\\\\\",\\\\\\\"     return result.css.toString(\\\\\\\\\\\\\\\"utf8\\\\\\\\\\\\\\\");\\\\\\\",\\\\\\\"   }\\\\\\\",\\\\\\\"   return {};\\\\\\\",\\\\\\\" }\\\\\\\",\\\\\\\" \\\\\\\",\\\\\\\" \\\\\\\",\\\\\\\" \\\\\\\",\\\\\\\" module.exports = sassLoader;\\\\\\\",\\\\\\\"\\\\\\\\\\\\\\\\ No newline at end of file\\\\\\\",\\\\\\\"\\\\\\\"]]\\\",\\\"\\\\\\\\ No newline at end of file\\\",\\\"+[[],[\\\\\\\"diff --git lib/auto-git/1.json lib/auto-git/1.json\\\\\\\",\\\\\\\"index 2003f1e..aec51b9 100644\\\\\\\",\\\\\\\"--- lib/auto-git/1.json\\\\\\\",\\\\\\\"+++ lib/auto-git/1.json\\\\\\\",\\\\\\\"@@ -1 +1 @@\\\\\\\",\\\\\\\"-{\\\\\\\\\\\\\\\"1.scss\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\" .content {\\\\\\\\\\\\\\\\r     &.style {\\\\\\\\\\\\\\\\r         width: 100px;\\\\\\\\\\\\\\\\rcontent: '-        height: 100px;';\\\\\\\\\\\\\\\\r     }\\\\\\\\\\\\\\\\r     .content {\\\\\\\\\\\\\\\\r         width: 100px;\\\\\\\\\\\\\\\\r     }\\\\\\\\\\\\\\\\rcontent: '+    .inner {';\\\\\\\\\\\\\\\\rcontent: '+        width: 100px;';\\\\\\\\\\\\\\\\rcontent: '+    }';\\\\\\\\\\\\\\\\r }\\\\\\\\\\\\\\\\r \\\\\\\\\\\\\\\\r .cc {\\\\\\\\\\\\\\\\r     width: 100px;\\\\\\\\\\\\\\\\r }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\"}\\\\\\\",\\\\\\\"\\\\\\\\\\\\\\\\ No newline at end of file\\\\\\\",\\\\\\\"+{\\\\\\\\\\\\\\\"1.scss\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\" .content {\\\\\\\\\\\\\\\\r     &.style {\\\\\\\\\\\\\\\\r         width: 100px;\\\\\\\\\\\\\\\\r         height: 100px;\\\\\\\\\\\\\\\\r         background: #ddd;\\\\\\\\\\\\\\\\r     }\\\\\\\\\\\\\\\\rcontent: '+    .dd {';\\\\\\\\\\\\\\\\rcontent: '+        width: 100px;';\\\\\\\\\\\\\\\\rcontent: '+    }';\\\\\\\\\\\\\\\\r }\\\\\\\\\\\\\\\\r \\\\\\\\\\\\\\\\r .cc {\\\\\\\\\\\\\\\\r     width: 100px;\\\\\\\\\\\\\\\\r }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\"}\\\\\\\",\\\\\\\"\\\\\\\\\\\\\\\\ No newline at end of file\\\\\\\"],[\\\\\\\"diff --git lib/auto-git/2.json lib/auto-git/2.json\\\\\\\",\\\\\\\"index 69d7219..6e0fb68 100644\\\\\\\",\\\\\\\"--- lib/auto-git/2.json\\\\\\\",\\\\\\\"+++ lib/auto-git/2.json\\\\\\\",\\\\\\\"@@ -1 +1 @@\\\\\\\",\\\\\\\"-[[],[\\\\\\\\\\\\\\\"diff --git 1.scss 1.scss\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"index c7b997d..6eb8dff 100644\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"--- 1.scss\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"+++ 1.scss\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"@@ -1,13 +1,15 @@\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\" .content {\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"     &.style {\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"         width: 100px;\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"-        height: 100px;\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"     }\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"     .content {\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"         width: 100px;\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"     }\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"+    .inner {\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"+        width: 100px;\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"+    }\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\" }\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\" .cc {\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"     width: 100px;\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\" }\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ No newline at end of file\\\\\\\\\\\\\\\"],[\\\\\\\\\\\\\\\"diff --git lib/compliestyles/sass-loader.js lib/compliestyles/sass-loader.js\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"index d554f8f..9573a67 100644\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"--- lib/compliestyles/sass-loader.js\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"+++ lib/compliestyles/sass-loader.js\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"@@ -1,25 +1,25 @@\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\" const sass = require('node-sass');\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\" function sassLoader(path) {\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"   const result = sass.renderSync({\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"     // file: path,\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"-    data: ' .content {     &.style {         width: 100px;         height: 100px;// -        background: #ddd;// +    }// +    .content {// +        width: 100px;     } }  .cc {     width: 100px; }',\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"+    data: \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\".content {     \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\r&.style {        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\r width: 100px;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\r// -        height: 100px;     \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\r}    \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\r .content {         \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\rwidth: 100px;     }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\r// +    .inner {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\r// +        width: 100px;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\r// +    } \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\r}  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\r.cc {     \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\rwidth: 100px; \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\r}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"     // outputStyle: 'compressed',\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"     // outFile: '../../1.css',\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"     // sourceMap: true, // or an absolute or relative (to outFile) path\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"     importer: function(url, prev, done) {\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"       // url is the path in import as is, which LibSass encountered.\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"       // prev is the previously resolved path.\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"       // done is an optional callback, either consume it or return value synchronously.\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"       // this.options contains this options hash\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"     }\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"   });\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"   if(result.css) {\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"     return result.css.toString(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"utf8\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\");\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"   }\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"   return {};\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\" }\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\" module.exports = sassLoader;\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ No newline at end of file\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"]]\\\\\\\",\\\\\\\"\\\\\\\\\\\\\\\\ No newline at end of file\\\\\\\",\\\\\\\"+[[],[\\\\\\\\\\\\\\\"diff --git 1.scss 1.scss\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"index 94c930a..e32f7a6 100644\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"--- 1.scss\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"+++ 1.scss\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"@@ -1,11 +1,14 @@\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\" .content {\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"     &.style {\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"         width: 100px;\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"         height: 100px;\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"         background: #ddd;\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"     }\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"+    .dd {\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"+        width: 100px;\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"+    }\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\" }\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\" .cc {\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"     width: 100px;\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\" }\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ No newline at end of file\\\\\\\\\\\\\\\"],[\\\\\\\\\\\\\\\"diff --git lib/auto-git/1.json lib/auto-git/1.json\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"index fb3c6fb..9cb5257 100644\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"--- lib/auto-git/1.json\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"+++ lib/auto-git/1.json\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"@@ -1,3 +1 @@\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"-{\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"-    \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"1.scss\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" .content {     &.style {         width: 100px;         height: 100px;         background: #ddd;     }+}  .cc {     width: 100px; }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ No newline at end of file\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"-}\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ No newline at end of file\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"+{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"1.scss\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" .content {     &.style {         width: 100px;         height: 100px;         background: #ddd;     }+    .dd {+        width: 100px;+    } }  .cc {     width: 100px; }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ No newline at end of file\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"}\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ No newline at end of file\\\\\\\\\\\\\\\"],[\\\\\\\\\\\\\\\"diff --git lib/auto-git/2.json lib/auto-git/2.json\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"index 699fecb..0c2ad4d 100644\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"--- lib/auto-git/2.json\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"+++ lib/auto-git/2.json\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"@@ -1 +1 @@\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"-[[],[\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"diff --git 1.scss 1.scss\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"index b408236..94c930a 100644\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"--- 1.scss\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+++ 1.scss\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"@@ -1,10 +1,11 @@\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" .content {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"     &.style {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         width: 100px;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         height: 100px;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         background: #ddd;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"     }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" .cc {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"     width: 100px;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ No newline at end of file\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"],[\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"diff --git lib/auto-git/parser.js lib/auto-git/parser.js\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"index 073d8ff..27b1e0d 100644\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"--- lib/auto-git/parser.js\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+++ lib/auto-git/parser.js\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"@@ -1,100 +1,129 @@\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" /**\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"  * 将diff得到的文件转为二进制流接着字符串解析为json\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"  */\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"-const {readFile} = require('fs');\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+const {readFile, writeFile} = require('fs');\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" const {REG_HEAD} = require('./regex'); // 辅助的正则表达式\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" const {INCLUDE_FILES} = require('./type');\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" function read(path) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"   return new Promise((rsv, rjt) => {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"     readFile(path, (err, data) => {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       if (err) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         console.error('======= 读取文件失败！您可能误删了临时文件 =======');\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         rjt(err);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       rsv(data.toString().split('\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n'));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"     })\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"   })\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" /**\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"  * @desc 将diff分块文件\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"  * @param {Array} arr \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"  * @resolve {Array}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"  */\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" function parsertoBlock(arr) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"   return new Promise((rsv, rjt) => {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"-\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"     const lines = arr;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"     \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"     let styleBlocks = [];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"-    let currentLine = '';\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+    let currentLine = [];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"     for (let i = 0, len = lines.length; i < len; i++) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       const line = lines[i];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       let values;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       // 判断head\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       if (values = REG_HEAD.exec(line)) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         console.log(line);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         styleBlocks.push(currentLine);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"-        currentLine = '';\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+        currentLine = [];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         continue;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"-      currentLine += line;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+      currentLine.push(line);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"     }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"     styleBlocks.push(currentLine);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+    writeFile('2.json', JSON.stringify(styleBlocks), err=> {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+      if(err) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+        console.log(err);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+      } else {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+        console.log('success');\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+      }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+    })\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"     rsv(styleBlocks);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"   })\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" function parsertoJson(arr) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"   let files = arr;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"-  let data = [];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+  // let data = [];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"   let temp = {};\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"   for(let j = 0; j < files.length; j++) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"     let lines = files[j];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+    let name;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"     if(lines === '') {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       continue;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"     }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"     for(let i = 0, len = lines.length; i < len; i++) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       const line = lines[i];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+      // console.log(line);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+      let values;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+      console.log(JSON.stringify(line));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+      // return;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       if (values = REG_HEAD.exec(line)) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         const type = values[1].split('.')[1];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+        console.log(type); \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+           \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         if (INCLUDE_FILES.indexOf(type) === -1) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"           break;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"-        data.length > 0 && data.push(temp);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"-        temp = {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"-          from: values[1],\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"-          to: values[2]\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"-        };\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+        console.log(JSON.stringify(values))\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+        name = values[2];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+        temp[name] = '';\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+        // data.length > 0 && data.push(temp);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+        // temp = {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+        //   from: values[1],\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+        //   to: values[2]\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+        // };\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         continue;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"-      // 判断 ---\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"-      if (line.indexOf('--- ') === 0) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"-        console.log(line.slice(4));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+      // 判断不加入line的情况\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+      if (line.indexOf('--- ') === 0 || line.indexOf('+++ ') === 0 || line.indexOf('@@ ') === 0 || line.indexOf('index ') === 0 || line.indexOf('//') === 0) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+        // console.log(1);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         continue;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+      if(name) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+        temp[name] += line;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+      }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"     }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"   }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+  // console.log(JSON.stringify(temp));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+  writeFile('1.json', JSON.stringify(temp), err=> {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+    if(err) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+      console.log(err);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+    } else {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+      console.log('success');\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+    }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+  })\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" function Parser() {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"   return new Promise((rsv, rjt) => {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"     read('./temp/diff.txt')\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       .then(arr => parsertoBlock(arr))\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+      .then(arr => parsertoJson(arr))\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       .then(result => {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         console.log(result)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       })\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       .catch(err => {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         console.log(err)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       })\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"   })\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" Parser()\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" //  module.exports = {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" //    Parser\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" //  }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ No newline at end of file\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"]]\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ No newline at end of file\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"+[[],[\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"diff --git 1.scss 1.scss\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"index 94c930a..e32f7a6 100644\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"--- 1.scss\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+++ 1.scss\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"@@ -1,11 +1,14 @@\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" .content {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"     &.style {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         width: 100px;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         height: 100px;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         background: #ddd;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"     }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+    .dd {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+        width: 100px;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+    }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" .cc {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"     width: 100px;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ No newline at end of file\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"],[\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"diff --git lib/auto-git/parser.js lib/auto-git/parser.js\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"index ae3d0d0..2e71fd8 100644\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"--- lib/auto-git/parser.js\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+++ lib/auto-git/parser.js\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"@@ -1,130 +1,130 @@\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" /**\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"  * 将diff得到的文件转为二进制流接着字符串解析为json\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"  */\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" const {readFile, writeFile} = require('fs');\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" const {REG_HEAD} = require('./regex'); // 辅助的正则表达式\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" const {INCLUDE_FILES} = require('./type');\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" function read(path) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"   return new Promise((rsv, rjt) => {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"     readFile(path, (err, data) => {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       if (err) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         console.error('======= 读取文件失败！您可能误删了临时文件 =======');\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         rjt(err);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       rsv(data.toString().split('\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n'));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"     })\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"   })\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" /**\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"  * @desc 将diff分块文件\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"  * @param {Array} arr \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"  * @resolve {Array}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"  */\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" function parsertoBlock(arr) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"   return new Promise((rsv, rjt) => {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"     const lines = arr;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"     \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"     let styleBlocks = [];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"     let currentLine = [];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"     for (let i = 0, len = lines.length; i < len; i++) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       const line = lines[i];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       let values;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       // 判断head\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       if (values = REG_HEAD.exec(line)) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         console.log(line);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         styleBlocks.push(currentLine);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         currentLine = [];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         currentLine.push(line);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         continue;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       currentLine.push(line);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"     }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"     styleBlocks.push(currentLine);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"     writeFile('2.json', JSON.stringify(styleBlocks), err=> {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       if(err) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         console.log(err);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       } else {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         console.log('success');\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"     })\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"     rsv(styleBlocks);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"   })\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" function parsertoJson(arr) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"   let files = arr;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"   // let data = [];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"   let temp = {};\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"   for(let j = 0; j < files.length; j++) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"     let lines = files[j];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"     let name;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"     if(lines === '') {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       continue;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"     }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"     for(let i = 0, len = lines.length; i < len; i++) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       const line = lines[i];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       // console.log(line);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       let values;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       // console.log(JSON.stringify(line));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       // return;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       if (values = REG_HEAD.exec(line)) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         const type = values[1].split('.')[1];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         console.log(type); \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"            \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         if (INCLUDE_FILES.indexOf(type) === -1) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"           break;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         console.log(JSON.stringify(values))\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         name = values[2];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         temp[name] = '';\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         // data.length > 0 && data.push(temp);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         // temp = {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         //   from: values[1],\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         //   to: values[2]\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         // };\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         continue;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       // 判断不加入line的情况\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       if (line.indexOf('--- ') === 0 || line.indexOf('+++ ') === 0 || line.indexOf('@@ ') === 0 || line.indexOf('index ') === 0 || line.indexOf('//') === 0) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         // console.log(1);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         continue;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       if(name) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         temp[name] += line;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"     }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"   }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"   // console.log(JSON.stringify(temp));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"   writeFile('1.json', JSON.stringify(temp), err=> {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"     if(err) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       console.log(err);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"     } else {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       console.log('success');\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"     }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"   })\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" function Parser() {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"   return new Promise((rsv, rjt) => {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"     read('./temp/diff.txt')\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       .then(arr => parsertoBlock(arr))\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       .then(arr => parsertoJson(arr))\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       .then(result => {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         console.log(result)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       })\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       .catch(err => {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"         console.log(err)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"       })\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"   })\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"-Parser()\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"+// Parser()\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" //  module.exports = {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" //    Parser\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" //  }\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ No newline at end of file\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"]]\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ No newline at end of file\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"]]\\\\\\\",\\\\\\\"\\\\\\\\\\\\\\\\ No newline at end of file\\\\\\\",\\\\\\\"\\\\\\\"]]\\\",\\\"\\\\\\\\ No newline at end of file\\\",\\\"\\\"]]\",\"\\\\ No newline at end of file\",\"\"]]","\\ No newline at end of file",""]]
\ No newline at end of file
diff --git lib/auto-git/index.js lib/auto-git/index.js
index f1e81e6..8a8c737 100644
--- lib/auto-git/index.js
+++ lib/auto-git/index.js
@@ -1,14 +1,14 @@
 const { runCommand } = require('./command.js');
-const { parser } = require('./parser.js');
+// const { parser } = require('./parser.js');
 
 function AutoGit() {
   runCommand('sh', [`${__dirname}/bin/gitdiff.sh`])
     .then(r => {
       
     })
     .catch(err => {
       console.log(err);
     })
 }
 
 AutoGit()
diff --git lib/auto-git/parser.js lib/auto-git/parser.js
index 452f23e..ae3d0d0 100644
--- lib/auto-git/parser.js
+++ lib/auto-git/parser.js
@@ -1,142 +1,130 @@
 /**
  * 将diff得到的文件转为二进制流接着字符串解析为json
  */
 
 const {readFile, writeFile} = require('fs');
 const {REG_HEAD} = require('./regex'); // 辅助的正则表达式
 const {INCLUDE_FILES} = require('./type');
 
 function read(path) {
   return new Promise((rsv, rjt) => {
     readFile(path, (err, data) => {
       if (err) {
         console.error('======= 读取文件失败！您可能误删了临时文件 =======');
         rjt(err);
       }
       rsv(data.toString().split('\n'));
     })
   })
 }
 /**
  * @desc 将diff分块文件
  * @param {Array} arr 
  * @resolve {Array}
  */
 function parsertoBlock(arr) {
   return new Promise((rsv, rjt) => {
     const lines = arr;
     
     let styleBlocks = [];
     let currentLine = [];
 
     for (let i = 0, len = lines.length; i < len; i++) {
       const line = lines[i];
       let values;
       // 判断head
       if (values = REG_HEAD.exec(line)) {
         console.log(line);
         styleBlocks.push(currentLine);
         currentLine = [];
         currentLine.push(line);
         continue;
       }
       currentLine.push(line);
       
     }
     styleBlocks.push(currentLine);
     writeFile('2.json', JSON.stringify(styleBlocks), err=> {
       if(err) {
         console.log(err);
       } else {
         console.log('success');
       }
     })
     rsv(styleBlocks);
   })
 }
 
 function parsertoJson(arr) {
   let files = arr;
   // let data = [];
   let temp = {};
   for(let j = 0; j < files.length; j++) {
     let lines = files[j];
     let name;
     if(lines === '') {
       continue;
     }
     for(let i = 0, len = lines.length; i < len; i++) {
-      let line = lines[i];
+      const line = lines[i];
       // console.log(line);
       let values;
       // console.log(JSON.stringify(line));
       // return;
       if (values = REG_HEAD.exec(line)) {
         const type = values[1].split('.')[1];
         console.log(type); 
            
         if (INCLUDE_FILES.indexOf(type) === -1) {
           break;
         }
         console.log(JSON.stringify(values))
         name = values[2];
         temp[name] = '';
         // data.length > 0 && data.push(temp);
         // temp = {
         //   from: values[1],
         //   to: values[2]
         // };
         continue;
       }
       // 判断不加入line的情况
-      if (line.indexOf('--- ') === 0 || line.indexOf('+++ ') === 0 || line.indexOf('@@ ') === 0 || line.indexOf('index ') === 0 || line.indexOf('//') === 0 || line.indexOf('\\') === 0) {
+      if (line.indexOf('--- ') === 0 || line.indexOf('+++ ') === 0 || line.indexOf('@@ ') === 0 || line.indexOf('index ') === 0 || line.indexOf('//') === 0) {
         // console.log(1);
         continue;
       }
-      if(line.indexOf('-') === 0) {
-        console.log('-',line);
-        // line = line.trim().replace(/^\-/, '// -');
-        line = `content: '${line}';`;
-        console.log('1-',line);
-      }
-      if(line.indexOf('+') === 0) {
-        console.log('+',line);
-        // line = line.trim().replace(/^\+/, '// +');
-        line = `content: '${line}';`;
-        console.log('1+',line);
-      }
       if(name) {
-        temp[name] += line+'\r';
+        temp[name] += line;
       }
     }
   }
 
   // console.log(JSON.stringify(temp));
   writeFile('1.json', JSON.stringify(temp), err=> {
     if(err) {
       console.log(err);
     } else {
       console.log('success');
     }
   })
 }
 
 function Parser() {
   return new Promise((rsv, rjt) => {
     read('./temp/diff.txt')
       .then(arr => parsertoBlock(arr))
       .then(arr => parsertoJson(arr))
       .then(result => {
         console.log(result)
       })
       .catch(err => {
         console.log(err)
       })
   })
 }
 
 Parser()
 
 //  module.exports = {
 //    Parser
 //  }
\ No newline at end of file
