[[],["diff --git 1.scss 1.scss","index b408236..94c930a 100644","--- 1.scss","+++ 1.scss","@@ -1,10 +1,11 @@"," .content {","     &.style {","         width: 100px;","         height: 100px;","         background: #ddd;","     }","+}"," "," .cc {","     width: 100px;"," }","\\ No newline at end of file"],["diff --git lib/auto-git/parser.js lib/auto-git/parser.js","index 073d8ff..27b1e0d 100644","--- lib/auto-git/parser.js","+++ lib/auto-git/parser.js","@@ -1,100 +1,129 @@"," /**","  * 将diff得到的文件转为二进制流接着字符串解析为json","  */"," ","-const {readFile} = require('fs');","+const {readFile, writeFile} = require('fs');"," const {REG_HEAD} = require('./regex'); // 辅助的正则表达式"," const {INCLUDE_FILES} = require('./type');"," "," function read(path) {","   return new Promise((rsv, rjt) => {","     readFile(path, (err, data) => {","       if (err) {","         console.error('======= 读取文件失败！您可能误删了临时文件 =======');","         rjt(err);","       }","       rsv(data.toString().split('\\n'));","     })","   })"," }"," /**","  * @desc 将diff分块文件","  * @param {Array} arr ","  * @resolve {Array}","  */"," function parsertoBlock(arr) {","   return new Promise((rsv, rjt) => {","-","     const lines = arr;","     ","     let styleBlocks = [];","-    let currentLine = '';","+    let currentLine = [];"," ","     for (let i = 0, len = lines.length; i < len; i++) {","       const line = lines[i];","       let values;","       // 判断head","       if (values = REG_HEAD.exec(line)) {","         console.log(line);","         styleBlocks.push(currentLine);","-        currentLine = '';","+        currentLine = [];","         continue;","       }","-      currentLine += line;","+      currentLine.push(line);","       ","     }","     styleBlocks.push(currentLine);","+    writeFile('2.json', JSON.stringify(styleBlocks), err=> {","+      if(err) {","+        console.log(err);","+      } else {","+        console.log('success');","+      }","+    })","     rsv(styleBlocks);","   })"," }"," "," function parsertoJson(arr) {","   let files = arr;","-  let data = [];","+  // let data = [];","   let temp = {};","   for(let j = 0; j < files.length; j++) {","     let lines = files[j];","+    let name;","     if(lines === '') {","       continue;","     }","     for(let i = 0, len = lines.length; i < len; i++) {","       const line = lines[i];","+      // console.log(line);","+      let values;","+      console.log(JSON.stringify(line));","+      // return;","       if (values = REG_HEAD.exec(line)) {","         const type = values[1].split('.')[1];","+        console.log(type); ","+           ","         if (INCLUDE_FILES.indexOf(type) === -1) {","           break;","         }","-        data.length > 0 && data.push(temp);","-        temp = {","-          from: values[1],","-          to: values[2]","-        };","+        console.log(JSON.stringify(values))","+        name = values[2];","+        temp[name] = '';","+        // data.length > 0 && data.push(temp);","+        // temp = {","+        //   from: values[1],","+        //   to: values[2]","+        // };","         continue;","       }","-      // 判断 ---","-      if (line.indexOf('--- ') === 0) {","-        console.log(line.slice(4));","+      // 判断不加入line的情况","+      if (line.indexOf('--- ') === 0 || line.indexOf('+++ ') === 0 || line.indexOf('@@ ') === 0 || line.indexOf('index ') === 0 || line.indexOf('//') === 0) {","+        // console.log(1);","         continue;","       }","+      if(name) {","+        temp[name] += line;","+      }","     }","   }","+","+  // console.log(JSON.stringify(temp));","+  writeFile('1.json', JSON.stringify(temp), err=> {","+    if(err) {","+      console.log(err);","+    } else {","+      console.log('success');","+    }","+  })"," }"," "," function Parser() {","   return new Promise((rsv, rjt) => {","     read('./temp/diff.txt')","       .then(arr => parsertoBlock(arr))","+      .then(arr => parsertoJson(arr))","       .then(result => {","         console.log(result)","       })","       .catch(err => {","         console.log(err)","       })","   })"," }"," "," Parser()"," "," //  module.exports = {"," //    Parser"," //  }","\\ No newline at end of file",""]]