[[],["diff --git 1.scss 1.scss","index c7b997d..6eb8dff 100644","--- 1.scss","+++ 1.scss","@@ -1,13 +1,15 @@"," .content {","     &.style {","         width: 100px;","-        height: 100px;","     }","     .content {","         width: 100px;","     }","+    .inner {","+        width: 100px;","+    }"," }"," "," .cc {","     width: 100px;"," }","\\ No newline at end of file"],["diff --git lib/compliestyles/sass-loader.js lib/compliestyles/sass-loader.js","index d554f8f..9573a67 100644","--- lib/compliestyles/sass-loader.js","+++ lib/compliestyles/sass-loader.js","@@ -1,25 +1,25 @@"," const sass = require('node-sass');"," "," function sassLoader(path) {","   const result = sass.renderSync({","     // file: path,","-    data: ' .content {     &.style {         width: 100px;         height: 100px;// -        background: #ddd;// +    }// +    .content {// +        width: 100px;     } }  .cc {     width: 100px; }',","+    data: \".content {     \\r&.style {        \\r width: 100px;\\r// -        height: 100px;     \\r}    \\r .content {         \\rwidth: 100px;     }\\r// +    .inner {\\r// +        width: 100px;\\r// +    } \\r}  \\r.cc {     \\rwidth: 100px; \\r}\\r\",","     // outputStyle: 'compressed',","     // outFile: '../../1.css',","     // sourceMap: true, // or an absolute or relative (to outFile) path","     importer: function(url, prev, done) {","       // url is the path in import as is, which LibSass encountered.","       // prev is the previously resolved path.","       // done is an optional callback, either consume it or return value synchronously.","       // this.options contains this options hash","     }","   });","   if(result.css) {","     return result.css.toString(\"utf8\");","   }","   return {};"," }"," "," "," "," module.exports = sassLoader;","\\ No newline at end of file",""]]